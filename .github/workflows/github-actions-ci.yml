name: Deploy app to GKE


on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  id-token: write
  contents: read

env:
  GCP_PROJECT: persequi
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  GCR_REGISTRY: gcr.io/${{ secrets.GCP_PROJECT }}
  GCR_REPOSITORY: us-central1-docker.pkg.dev/persequi/veribuzimgrepo
  K8S_NAMESPACE: dev
  K8S_DEPLOYMENT_NAME: app-deployment

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.1

    - name: Set up Node.js
      uses: actions/setup-node@v4.0.2
      with:
        node-version: '18'
        cache: 'npm'


    - name: Authenticate with Google Cloud
      run: |
        echo '${{ secrets.GCP_SA_KEY }}' > sa_key.json
        gcloud auth activate-service-account --key-file=sa_key.json

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2.1.0
    
    - name: Install gke-gcloud-auth-plugin
      run: gcloud components install gke-gcloud-auth-plugin
       
    - name: Authenticate with GCR
      run: gcloud auth configure-docker

    - name: Build, tag, and push image to Google Container Registry
      env:  
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build --no-cache -t ${{ env.GCR_REGISTRY }}/$GCR_REPOSITORY:$IMAGE_TAG .
        docker push ${{ env.GCR_REGISTRY }}/$GCR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$GCR_REGISTRY/$GCR_REPOSITORY:$IMAGE_TAG"

       
    - name: Set up kubectl
      run: |
        gcloud container clusters get-credentials cluster-1 --zone us-central1-f --project ${{ env.GCP_PROJECT }}

    - name: Deploy to Google Kubernetes Engine
      env:
        DIRECTORY: manifests
        YML_FILE: deployment.yaml
        IMAGE_TAG: ${{ github.sha }}
      run: |
        echo "${{ github.sha }}"
        cd $DIRECTORY
        sed -i'' -e "s|imageTag|${{ env.GCR_REGISTRY }}/$GCR_REPOSITORY:$IMAGE_TAG|g" $YML_FILE
        cat $YML_FILE
        kubectl apply -f $YML_FILE